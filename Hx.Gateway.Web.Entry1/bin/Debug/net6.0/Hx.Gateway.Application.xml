<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hx.Gateway.Application</name>
    </assembly>
    <members>
        <member name="T:Hx.Gateway.Application.AutoMapper.BaseMapper">
            <summary>
            基础映射文件
            </summary>
        </member>
        <member name="M:Hx.Gateway.Application.AutoMapper.BaseMapper.Serialize(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.AutoMapper.BaseMapper.Deserialize``1(System.String)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:Hx.Gateway.Application.AutoMapper.GlobalConfigurationMapper">
            <summary>
            全局配置映射
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.BaseSelectDto`1">
            <summary>
            下拉框
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Hx.Gateway.Application.BaseSelectDto`1.Value">
            <summary>
            下拉框的值
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.BaseSelectDto`1.Label">
            <summary>
            下拉框的标签
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.BaseTreeDto`1">
            <summary>
            基础树
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Hx.Gateway.Application.Const.DatabaseConfigIdConst">
            <summary>
            数据库配置id常量
            </summary>
        </member>
        <member name="F:Hx.Gateway.Application.Const.DatabaseConfigIdConst.OcelotSettings">
            <summary>
            网关配置
            </summary>
        </member>
        <member name="F:Hx.Gateway.Application.Const.GatewayCacheConst.Route">
            <summary>
            路由缓存
            </summary>
        </member>
        <member name="F:Hx.Gateway.Application.Const.GatewayCacheConst.ConsulSettingKey">
            <summary>
            consul配置关键字
            </summary>
        </member>
        <member name="F:Hx.Gateway.Application.Const.GatewayCacheConst.ConsulDC">
            <summary>
            consul DC 库
            </summary>
        </member>
        <member name="F:Hx.Gateway.Application.Const.GatewayCacheConst.AllSelect">
            <summary>
            全部下拉框内容
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Entities.TgDictItem">
             <summary>
             字典项
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgDictItem.DictTypeId">
             <summary>
             字典类型Id
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgDictItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgDictItem.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgDictItem.Remark">
             <summary>
             备注
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgDictItem.SortIndex">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgDictItem.Status">
             <summary>
             状态
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Entities.TgDictType">
             <summary>
             字典
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgDictType.Name">
             <summary>
             字典名称 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgDictType.Type">
             <summary>
             字典类型 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgDictType.DictionaryItems">
            <summary>
            路由地址配置
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Entities.TgGlobalConfiguration">
             <summary>
             全局配置表
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgGlobalConfiguration.BaseUrl">
             <summary>
             基础地址 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgGlobalConfiguration.RequestIdKey">
             <summary>
             请求ID 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgGlobalConfiguration.DownstreamScheme">
             <summary>
             Http协议（http,https） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgGlobalConfiguration.DownstreamHttpVersion">
             <summary>
             Http版本（1.0，1.1，2.0） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgGlobalConfiguration.LoadBalancerOptions">
             <summary>
             负载均衡
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.LoadBalancerOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgGlobalConfiguration.HttpHandlerOptions">
             <summary>
             HttpHandler配置 
            </summary>   
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.HttpHandlerOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgGlobalConfiguration.QoSOptions">
             <summary>
             服务质量控制
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.QoSOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgGlobalConfiguration.RateLimitOptions">
             <summary>
             全局限流配置 
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.GlobalRateLimitOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgGlobalConfiguration.ServiceDiscoveryProviderOptions">
            <summary>
            服务发现代理配置
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.ServiceDiscoveryProviderOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgGlobalConfiguration.Status">
             <summary>
             状态
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Entities.TgProject">
             <summary>
             项目表
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgProject.Name">
             <summary>
             项目名称 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgProject.SortIndex">
             <summary>
             排序字段 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgProject.Status">
             <summary>
             状态字段 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgProject.Routes">
            <summary>
            路由配置
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Entities.TgRoute">
             <summary>
             路由表
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.ProjectId">
             <summary>
             项目Id 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.DownstreamPathTemplate">
             <summary>
             下游的路由模板，即真实处理请求的路径模板 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.UpstreamPathTemplate">
             <summary>
             上游请求的模板，即用户真实请求的链接 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.UpstreamHttpMethod">
             <summary>
             上游请求的http方法（数组：GET、POST、PUT） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.DownstreamHttpMethod">
             <summary>
             下游请求的http方法（数组：GET、POST、PUT） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.DownstreamHttpVersion">
             <summary>
              下游Http版本 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.RequestIdKey">
             <summary>
              请求Id 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.RouteIsCaseSensitive">
             <summary>
              开启上下游路由模板大小写匹配 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.ServiceName">
             <summary>
              服务名 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.ServiceNamespace">
             <summary>
              服务命名空间 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.DownstreamScheme">
             <summary>
             请求的方式，如：http,htttps 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.FileCacheOptions">
             <summary>
             缓存配置
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.FileCacheOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.QoSOptions">
            <summary>
            服务质量
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.QoSOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.LoadBalancerOptions">
             <summary>
              负载均衡
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.LoadBalancerOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.RateLimitOptions">
             <summary>
             限制配置
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.RateLimitOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.AuthenticationOptions">
             <summary>
              身份认证
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.AuthenticationOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.HttpHandlerOptions">
             <summary>
              HttpHandler配置
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.HttpHandlerOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.UpstreamHost">
             <summary>
              该特性允许您拥有基于上游主机的路由。
              它的工作原理是查看客户端使用的主机头，然后将其作为我们用来标识路由的信息的一部分
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.DelegatingHandlers">
             <summary>
              委托处理程序，需要实现DelegatingHandler类
              数组[ "FakeHandlerTwo", "FakeHandler"]
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.Priority">
             <summary>
              你可以通过在ocelot.json中包含“Priority”属性来定义你想要的路由匹配Upstream HttpRequest的顺序
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.DangerousAcceptAnyServerCertificateValidator">
             <summary>
             评估危险服务验证 
             如果要忽略SSL警告/错误，请在路由配置中设置以下参数
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.Status">
             <summary>
              状态
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.RouteHostPorts">
            <summary>
            路由地址配置
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRoute.RouteProperties">
            <summary>
            路由属性
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Entities.TgRouteHostPort">
             <summary>
             路由地址配置表
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRouteHostPort.Host">
             <summary>
              路由主机
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRouteHostPort.Port">
             <summary>
              端口
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRouteHostPort.RouteId">
             <summary>
             路由Id 
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Entities.TgRouteProperty">
             <summary>
             路由属性表
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRouteProperty.Key">
             <summary>
              
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRouteProperty.Value">
             <summary>
              
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRouteProperty.RouteId">
             <summary>
             路由Id 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgRouteProperty.Type">
             <summary>
              
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Entities.TgSettingBak">
             <summary>
             配置备份
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgSettingBak.BakTime">
             <summary>
             备份时间
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgSettingBak.BakJson">
             <summary>
             备份内容
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgSettingBak.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgSettingBak.ConsulKey">
            <summary>
            ConsulKey
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgSettingBak.ConsulDc">
            <summary>
            ConsulDc
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Entities.TgUserAccount">
             <summary>
             用户表
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgUserAccount.Account">
             <summary>
             账户
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgUserAccount.Password">
             <summary>
             密码
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgUserAccount.OpenId">
            <summary>
            OpenId
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgUserAccount.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Entities.TgUserAccount.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Enum.DictTypeEnum">
            <summary>
            字典类型枚举
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Enum.GatewayErrorCodeEnum">
            <summary>
            网关异常代码
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.IConsulHttp">
            <summary>
            Consul Http客户端
            </summary>
        </member>
        <member name="M:Hx.Gateway.Application.IConsulHttp.GetConsulKeyValueAsync(System.String,System.String)">
            <summary>
            读取Consul指定配置
            </summary>
            <param name="settingPath"></param>
            <param name="dc"></param>
            <returns></returns>
        </member>
        <member name="P:Hx.Gateway.Application.Options.LoginSettingsOptions.TotpLogin">
            <summary>
            是否使用Totp登录
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Options.Ocelot.AuthenticationOptions">
            <summary>
            为了验证路由，然后使用Ocelot的任何基于声明的功能，如授权或使用令牌的值修改请求。
            用户必须像往常一样在他们的Startup.cs中注册身份验证服务，
            但每次注册时都提供一个方案(身份验证提供者密钥)。
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.AuthenticationOptions.AuthenticationProviderKey">
            <summary>
            当Ocelot运行时，它会查看这个AuthenticationProviderKey并检查是否有一个使用给定密钥注册的身份验证提供程序。
            如果没有，那么Ocelot将不会启动，如果有，那么Route将在执行时使用该提供程序
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.AuthenticationOptions.AllowedScopes">
            <summary>
            允许的范围
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Options.Ocelot.FileCacheOptions">
            <summary>
            Ocelot目前支持CacheManager项目提供的一些非常基本的缓存。
            这是一个了不起的项目，解决了很多缓存问题。我
            建议使用这个包来缓存Ocelot
            Install-Package Ocelot.Cache.CacheManager
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.FileCacheOptions.TtlSeconds">
            <summary>
            如设置为15，这意味着缓存将在15秒后过期
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.FileCacheOptions.Region">
            <summary>
            区域
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Options.Ocelot.GlobalRateLimitOptions">
            <summary>
            全局限流配置
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.GlobalRateLimitOptions.DisableRateLimitHeaders">
            <summary>
            该值指定是否禁用X-Rate-Limit和Retry-After报头
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.GlobalRateLimitOptions.QuotaExceededMessage">
            <summary>
            此值指定超过的消息
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.GlobalRateLimitOptions.HttpStatusCode">
            <summary>
            此值指定限速发生时返回的HTTP状态码
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.GlobalRateLimitOptions.ClientIdHeader">
            <summary>
            允许您指定应用于标识客户端的标头。默认情况下是" ClientId "
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Options.Ocelot.HttpHandlerOptions">
            <summary>
            使用路由配置中的HttpHandlerOptions设置HttpHandler行为
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.HttpHandlerOptions.AllowAutoRedirect">
            <summary>
            AllowAutoRedirect是一个指示请求是否应该遵循重定向响应的值。
            如果请求应该自动跟随来自下游资源的重定向响应，
            则将其设置为true;否则错误。默认值为false
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.HttpHandlerOptions.UseCookieContainer">
            <summary>
            UseCookieContainer是一个值，指示处理程序是否使用cookie econtainer属性存储服务器cookie，并在发送请求时使用这些cookie。默认值为false。请注意，如果您正在使用CookieContainer, 
            Ocelot会为每个下游服务缓存HttpClient。
            这意味着对DownstreamService的所有请求都将共享相同的cookie
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.HttpHandlerOptions.UseTracing">
            <summary>
            是否使用跟踪
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.HttpHandlerOptions.UseProxy">
            <summary>
            是否使用代理
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.HttpHandlerOptions.MaxConnectionsPerServer">
            <summary>
            这将控制内部HttpClient将打开多少个连接。这可以在Route或全局级别设置。
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Options.Ocelot.LoadBalancerOptions">
            <summary>
            Ocelot可以为每条路由在可用的下游服务之间进行负载平衡。这意味着您可以扩展您的下游服务，Ocelot可以有效地使用它们
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.LoadBalancerOptions.Type">
            <summary>
            可用的负载均衡器类型
            LeastConnection:跟踪哪些服务正在处理请求，并将新请求发送给现有请求最少的服务。算法状态并不分布在Ocelot的集群中
            RoundRobin:循环可用的服务并发送请求。算法状态并不分布在Ocelot的集群中
            NoLoadBalancer:从配置或服务发现中获取第一个可用服务
            CookieStickySessions :使用cookie将所有请求粘贴到特定的服务器
            Custom Load Balancers:自定义类型，需要实现ILoadBalancer
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.LoadBalancerOptions.Key">
            <summary>
            Key:这是您希望用于粘滞会话的cookie的密钥
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.LoadBalancerOptions.Expiry">
            <summary>
            这是您希望会话被卡住的毫秒数
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Options.Ocelot.OcelotGlobalConfigurationNode">
            <summary>
            Ocelot全局配置节点
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotGlobalConfigurationNode.ServiceDiscoveryProvider">
            <summary>
            服务发现
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotGlobalConfigurationNode.RequestIdKey">
            <summary>
            请求id
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotGlobalConfigurationNode.RateLimitOptions">
            <summary>
            限流配置
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Options.Ocelot.OcelotRoot">
            <summary>
            Ocelot配置
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRoot.Routes">
            <summary>
            路由配置
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRoot.GlobalConfiguration">
            <summary>
            全局配置
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode">
            <summary>
            Ocelot路由节点配置
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode.DownstreamPathTemplate">
             <summary>
             下游的路由模板，即真实处理请求的路径模板 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode.UpstreamPathTemplate">
             <summary>
             下游的路由模板，即真实处理请求的路径模板 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode.DownstreamHttpMethod">
            <summary>
            下游请求的http方法
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode.UpstreamHttpMethod">
             <summary>
             上游请求的http方法（数组：GET、POST、PUT） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode.RequestIdKey">
             <summary>
             请求Id 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode.RouteIsCaseSensitive">
             <summary>
             开启上下游路由模板大小写匹配 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode.ServiceName">
             <summary>
              服务名 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode.DownstreamScheme">
             <summary>
             请求的方式，如：http,htttps 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode.DownstreamHostAndPorts">
            <summary>
            下游请求地址和端口
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode.LoadBalancerOptions">
            <summary>
            负载均衡
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.OcelotRouteNode.DelegatingHandlers">
            <summary>
            委托
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Options.Ocelot.QoSOptions">
            <summary>
            Quality of Service
            Ocelot当前只支持一个QoS能力。
            如果您想在向下游服务发出请求时使用断路器，
            则可以在每个路由的基础上进行设置。它使用了一个叫做Polly的很棒的.net库。
            Install-Package Ocelot.Provider.Polly
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.QoSOptions.Enabled">
            <summary>
            流量调控开启
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.QoSOptions.ExceptionsAllowedBeforeBreaking">
            <summary>
            要实现此规则，必须对ExceptionsAllowedBeforeBreaking设置一个大于0的数字
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.QoSOptions.DurationOfBreak">
            <summary>
            断路时间是指断路器被跳闸后将保持1秒的开启状态
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.QoSOptions.TimeoutValue">
            <summary>
            表示如果一个请求超过5秒，它将自动超时。
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Options.Ocelot.RateLimitOptions">
            <summary>
            Ocelot支持上游请求的速率限制，这样下游服务就不会过载
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.RateLimitOptions.ClientWhitelist">
            <summary>
            这是一个包含客户端白名单的数组。这意味着该数组中的客户端将不受速率限制的影响
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.RateLimitOptions.EnableRateLimiting">
            <summary>
            此值指定启用端点速率限制
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.RateLimitOptions.Period">
            <summary>
            该值指定限制适用的时间段，如1s、5m、1h、1d等。
            如果在此时间段内发出的请求超过限制，则需要等待PeriodTimespan结束后再发出另一个请求
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.RateLimitOptions.PeriodTimespan">
            <summary>
            这个值指定我们可以在特定的秒数后重试
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.RateLimitOptions.Limit">
            <summary>
            此值指定客户端在指定时间段内可以发出的最大请求数
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Options.Ocelot.ServiceDiscoveryProviderOptions">
            <summary>
            Ocelot允许您指定一个服务发现提供程序，并使用它来为Ocelot转发请求的下游服务找到主机和端口。目前，
            这只在GlobalConfiguration部分中得到支持，
            这意味着相同的服务发现提供者将用于您在Route级别指定ServiceName的所有路由
            Install-Package Ocelot.Provider.Consul
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.ServiceDiscoveryProviderOptions.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.ServiceDiscoveryProviderOptions.Scheme">
            <summary>
            Http协议（http,https） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.ServiceDiscoveryProviderOptions.Host">
            <summary>
            
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.ServiceDiscoveryProviderOptions.Token">
            <summary>
            如果您正在使用ACL与Consul Ocelot支持添加X-Consul-Token头。为了使其工作，您必须添加下面的附加属性
            Ocelot将把这个令牌添加到Consul客户端，用于发出请求，然后用于每个请求
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.ServiceDiscoveryProviderOptions.ConfigurationKey">
            <summary>
            配置key
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.ServiceDiscoveryProviderOptions.PollingInterval">
            <summary>
            轮询间隔以毫秒为单位，告诉Ocelot多久调用Consul更改一次服务配置
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Options.Ocelot.ServiceDiscoveryProviderOptions.Namespace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.SeedData.TgUserAccountSeedData">
            <summary>
            系统用户表种子数据
            </summary>
        </member>
        <member name="M:Hx.Gateway.Application.SeedData.TgUserAccountSeedData.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Consul.ConsulService.PostRollBackAsync(System.Int32)">
            <summary>
            回滚
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Consul.ConsulService.GetPageSettingBaksAsync(Hx.Gateway.Application.Services.Consul.Dtos.PageSettingBakInput)">
            <summary>
            分页查询备份信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Consul.ConsulService.GetLastSettingBakAsync(System.String,System.String)">
            <summary>
            获取最近的备份
            </summary>
            <param name="key"></param>
            <param name="dc"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Consul.ConsulService.InsertSettingBakAsync(System.String,System.String,System.String,System.String)">
            <summary>
            新增备份记录
            </summary>
            <param name="key"></param>
            <param name="dc"></param>
            <param name="json"></param>
            <param name="remark"></param>
            <returns></returns>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Consul.Dtos.SettingBakOutput.Id">
             <summary>
             主键Id 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Consul.Dtos.SettingBakOutput.BakTime">
             <summary>
             备份时间
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Consul.Dtos.SettingBakOutput.BakJson">
             <summary>
             备份内容
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Consul.Dtos.SettingBakOutput.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Consul.Dtos.SettingBakOutput.ConsulKey">
            <summary>
            ConsulKey
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Consul.Dtos.SettingBakOutput.ConsulDc">
            <summary>
            ConsulDc
            </summary>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Dictionary.DictService.GetPageDictionaryAsync(Hx.Core.BasePageInput)">
            <summary>
            分页查询字典信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Dictionary.DictService.GetDictItemAsync(Hx.Gateway.Application.Enum.DictTypeEnum)">
            <summary>
            查询字典项信息
            </summary>
            <param name="dictType"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Dictionary.DictService.GetAllSelectAsync">
            <summary>
            获取所有下拉框
            </summary>
            <returns></returns>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Dictionary.Dtos.AllSelectOutput.ConsulSettingKey">
             <summary>
             consul配置关键字
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Dictionary.Dtos.AllSelectOutput.ConsulDC">
             <summary>
             consul DC 库 
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.AddGlobalConfigurationInput">
            <summary>
            新增全局配置
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.AddGlobalConfigurationInput.BaseUrl">
             <summary>
             基础地址 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.AddGlobalConfigurationInput.RequestIdKey">
             <summary>
             请求ID 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.AddGlobalConfigurationInput.DownstreamScheme">
             <summary>
             Http协议（http,https） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.AddGlobalConfigurationInput.DownstreamHttpVersion">
             <summary>
             Http版本（1.0，1.1，2.0） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.AddGlobalConfigurationInput.LoadBalancerOptions">
             <summary>
             负载均衡
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.LoadBalancerOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.AddGlobalConfigurationInput.HttpHandlerOptions">
             <summary>
             HttpHandler配置 
            </summary>   
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.HttpHandlerOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.AddGlobalConfigurationInput.QoSOptions">
             <summary>
             服务质量控制
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.QoSOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.AddGlobalConfigurationInput.RateLimitOptions">
             <summary>
             全局限流配置 
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.RateLimitOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.AddGlobalConfigurationInput.ServiceDiscoveryProviderOptions">
            <summary>
            服务发现代理配置
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.ServiceDiscoveryProviderOptions"/>
        </member>
        <member name="T:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput">
            <summary>
            全局配置文件输出
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput.Id">
            <summary>
            主键id
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput.BaseUrl">
             <summary>
             基础地址 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput.RequestIdKey">
             <summary>
             请求ID 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput.DownstreamScheme">
             <summary>
             Http协议（http,https） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput.DownstreamHttpVersion">
             <summary>
             Http版本（1.0，1.1，2.0） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput.LoadBalancerOptions">
             <summary>
             负载均衡
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.LoadBalancerOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput.HttpHandlerOptions">
             <summary>
             HttpHandler配置 
            </summary>   
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.HttpHandlerOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput.QoSOptions">
             <summary>
             服务质量控制
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.QoSOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput.RateLimitOptions">
             <summary>
             全局限流配置 
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.RateLimitOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput.ServiceDiscoveryProviderOptions">
            <summary>
            服务发现代理配置
            </summary>
            <see cref="T:Hx.Gateway.Application.Options.Ocelot.ServiceDiscoveryProviderOptions"/>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.GlobalConfigurationOutput.Status">
             <summary>
             状态
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.UpdateGlobalConfigurationInput">
            <summary>
            编辑全局配置
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.UpdateGlobalConfigurationInput.Id">
             <summary>
             主键Id 
            </summary>
        </member>
        <member name="M:Hx.Gateway.Application.Services.GlobalConfiguration.GlobalConfigurationService.GetGlobalConfigurationAsync">
            <summary>
            查询全局配置信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.GlobalConfiguration.GlobalConfigurationService.AddGlobalConfigurationAsync(Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.AddGlobalConfigurationInput)">
            <summary>
            新增全局配置信息
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.GlobalConfiguration.GlobalConfigurationService.UpdateGlobalConfigurationAsync(Hx.Gateway.Application.Services.GlobalConfiguration.Dtos.UpdateGlobalConfigurationInput)">
            <summary>
            更新全局配置信息
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.GlobalConfiguration.GlobalConfigurationService.DeletGlobalConfigurationAsync(System.Int32)">
            <summary>
            删除全局配置信息
            </summary>
            <param name="globalConfigurationId">全局配置Id</param>
            <returns></returns>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Projects.AddProjectInput.Name">
             <summary>
             项目名称
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Projects.AddProjectInput.SortIndex">
             <summary>
             排序字段
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Services.Projects.PageProjectInput">
            <summary>
            分页查询项目
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Projects.PageProjectInput.Status">
            <summary>
            启动/禁用
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Projects.UpdateProjectInput.Id">
             <summary>
             项目Id
            </summary>
        </member>
        <member name="M:Hx.Gateway.Application.Services.ProjectService.GetProjectList">
            <summary>
            查询项目信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.ProjectService.GetAllEnabledProjectIdsAsync">
            <summary>
            查询所有可用的项目
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.ProjectService.GetPageProjectAsync(Hx.Gateway.Application.Services.Projects.PageProjectInput)">
            <summary>
            分页查询项目信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.ProjectService.AddProjectAsync(Hx.Gateway.Application.Services.Projects.AddProjectInput)">
            <summary>
            新增项目信息
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.ProjectService.UpdateProjectAsync(Hx.Gateway.Application.Services.Projects.UpdateProjectInput)">
            <summary>
            更新项目信息
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.ProjectService.PatchProjectAsync(System.Int64,Hx.Core.StatusEnum)">
            <summary>
            启用或禁用项目信息
            </summary>
            <param name="projectId">项目Id</param>
            <param name="status">状态</param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.ProjectService.DeleteProjectAsync(System.Int32)">
            <summary>
            删除项目信息
            </summary>
            <param name="projectId">项目Id</param>
            <returns></returns>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.ProjectId">
             <summary>
             项目Id 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.DownstreamPathTemplate">
             <summary>
             下游的路由模板，即真实处理请求的路径模板 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.UpstreamPathTemplate">
             <summary>
             上游请求的模板，即用户真实请求的链接 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.UpstreamHttpMethod">
             <summary>
             上游请求的http方法（数组：GET、POST、PUT） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.DownstreamHttpMethod">
            <summary>
            下游请求的http方法
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.RequestIdKey">
             <summary>
             请求Id 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.RouteIsCaseSensitive">
             <summary>
             开启上下游路由模板大小写匹配 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.ServiceName">
             <summary>
              服务名 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.DownstreamScheme">
             <summary>
             请求的方式，如：http,htttps 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.DownstreamHostAndPorts">
            <summary>
            下游请求地址和端口
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.LoadBalancerOptions">
            <summary>
            负载均衡
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.DelegatingHandlers">
            <summary>
            委托
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.RouteHostPorts">
            <summary>
            路由地址配置
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput.RouteProperties">
            <summary>
            路由属性
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteInput">
            <summary>
            分页查询路由
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteInput.ProjectId">
            <summary>
            项目Id
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteInput.Status">
            <summary>
            启动/禁用
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteInput.DownstreamPathTemplate">
            <summary>
            下游的路由模板，即真实处理请求的路径模板
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteInput.UpstreamPathTemplate">
            <summary>
            上游请求的模板，即用户真实请求的链接
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteInput.RequestIdKey">
            <summary>
            请求Id
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteOutput">
            <summary>
            分页查询路由
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteOutput.Id">
             <summary>
             主键ID 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteOutput.DownstreamPathTemplate">
             <summary>
             下游的路由模板，即真实处理请求的路径模板 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteOutput.UpstreamPathTemplate">
             <summary>
             上游请求的模板，即用户真实请求的链接 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteOutput.UpstreamHttpMethod">
             <summary>
             上游请求的http方法（数组：GET、POST、PUT） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteOutput.DownstreamHttpMethod">
             <summary>
             下游请求的http方法（数组：GET、POST、PUT） 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteOutput.DownstreamHttpVersion">
             <summary>
              下游Http版本 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteOutput.RequestIdKey">
             <summary>
              请求Id 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteOutput.DownstreamScheme">
             <summary>
             请求的方式，如：http,htttps 
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteOutput.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.PageRouteOutput.Enabled">
             <summary>
             是否有效
            </summary>
        </member>
        <member name="T:Hx.Gateway.Application.Services.Routes.Dtos.UpdateRouteInput">
            <summary>
            更新路由信息
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.Routes.Dtos.UpdateRouteInput.Id">
            <summary>
            路由id
            </summary>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Routes.RouteService.GetRoutePreviewAsync">
            <summary>
            预览路由信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Routes.RouteService.GetRouteByProjectIdsAsync(System.Collections.Generic.List{System.Int64})">
            <summary>
            查询路由具体信息
            </summary>
            <param name="projectIds">项目Id集合</param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Routes.RouteService.GetPageRouteAsync(Hx.Gateway.Application.Services.Routes.Dtos.PageRouteInput)">
            <summary>
            分页查询项目信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Routes.RouteService.GetRouteAsync(System.Int32)">
            <summary>
            查询路由具体信息
            </summary>
            <param name="routeId"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Routes.RouteService.InsertRouteAsync(Hx.Gateway.Application.Services.Routes.Dtos.AddRouteInput)">
            <summary>
            新增路由信息
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Routes.RouteService.UpdateRouteAsync(Hx.Gateway.Application.Services.Routes.Dtos.UpdateRouteInput)">
            <summary>
            更新路由信息
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Routes.RouteService.PatchProjectAsync(System.Int32,Hx.Core.StatusEnum)">
            <summary>
            启用或禁用项目信息
            </summary>
            <param name="projectId">项目Id</param>
            <param name="status">状态</param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Routes.RouteService.PatchRouteAsync(System.Int64,Hx.Core.StatusEnum)">
            <summary>
            启用或禁用路由信息
            </summary>
            <param name="routeId">路由Id</param>
            <param name="status">状态</param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.Routes.RouteService.DeleteRouteAsync(System.Int32)">
            <summary>
            删除路由信息
            </summary>
            <param name="routeId">路由Id</param>
            <returns></returns>
        </member>
        <member name="T:Hx.Gateway.Application.Services.System.Dtos.LoginInput">
            <summary>
            登录请求
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.System.Dtos.LoginInput.Account">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.System.Dtos.LoginInput.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.System.Dtos.LoginOutput.AccessToken">
            <summary>
            授权token
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.System.Dtos.LoginOutput.RefreshToken">
            <summary>
            刷新token
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.System.Dtos.LoginOutput.FullName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.System.Dtos.LoginOutput.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.System.Dtos.LoginOutput.OpenId">
            <summary>
            用户OPENID
            </summary>
        </member>
        <member name="P:Hx.Gateway.Application.Services.System.Dtos.WxUserInfoDto.OpenId">
            <summary>
            用户唯一标识
            </summary>
        </member>
        <member name="M:Hx.Gateway.Application.Services.System.SystemService.LoginAsync(Hx.Gateway.Application.Services.System.Dtos.LoginInput)">
            <summary>
            登录授权
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.System.SystemService.LoginByUserAccountAsync(Hx.Gateway.Application.Services.System.Dtos.LoginInput)">
            <summary>
            使用用户名密码登录
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Hx.Gateway.Application.Services.System.SystemService.LoginByTotpAsync(Hx.Gateway.Application.Services.System.Dtos.LoginInput)">
            <summary>
            使用Totp登录
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="F:Hx.Gateway.Application.Totp._timeStepTicks">
            <summary>
            timestep
            30s(Recommend)
            </summary>
        </member>
    </members>
</doc>
